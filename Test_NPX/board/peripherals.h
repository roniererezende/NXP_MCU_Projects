/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_lptmr.h"
#include "fsl_adc16.h"
#include "fsl_clock.h"
#include "fsl_tpm.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Alias for GPIOD peripheral */
#define GPIOD_GPIO GPIOD
/* Alias for PORTD */
#define GPIOD_PORT PORTD
/* GPIOD interrupt vector ID (number). */
#define GPIOD_IRQN PORTB_PORTC_PORTD_PORTE_IRQn
/* GPIOD interrupt handler identifier. */
#define GPIOD_IRQHANDLER PORTB_PORTC_PORTD_PORTE_IRQHandler
/* BOARD_InitPeripherals defines for LPTMR0 */
/* Definition of peripheral ID */
#define LPTMR0_PERIPHERAL LPTMR0
/* Definition of the clock source frequency */
#define LPTMR0_CLK_FREQ 1000UL
/* Definition of the prescaled clock source frequency */
#define LPTMR0_INPUT_FREQ 1000UL
/* Definition of the timer period in us */
#define LPTMR0_USEC_COUNT 1000000UL
/* Definition of the timer period in number of ticks */
#define LPTMR0_TICKS 1000UL
/* LPTMR0 interrupt vector ID (number). */
#define LPTMR0_IRQN LPTMR0_IRQn
/* LPTMR0 interrupt handler identifier. */
#define Timer_Interrupt LPTMR0_IRQHandler
/* Alias for ADC0 peripheral */
#define ADC_PERIPHERAL ADC0
/* Definition of custom name for ADC0 configuration #0 (channel 8, control group 0) */
#define ADC_ADC_TRIM 0U
/* ADC interrupt vector ID (number). */
#define ADC_IRQN ADC0_IRQn
/* ADC interrupt handler identifier. */
#define ADC_IRQHANDLER ADC0_IRQHandler
/* Channel 0 (SE.8) conversion control group. */
#define ADC_CH0_CONTROL_GROUP 0
/* Definition of peripheral ID */
#define TPM1_PERIPHERAL TPM1
/* Definition of the clock source frequency */
#define TPM1_CLOCK_SOURCE 48000000UL
/* TPM1 interrupt vector ID (number). */
#define TPM1_IRQN TPM0_IRQn
/* TPM1 interrupt handler identifier. */
#define TPM1_IRQHANDLER 
/* Definition of TPM1 channel number 1 */
#define TPM1_PWM_LED_CHANNEL kTPM_Chnl_1

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lptmr_config_t LPTMR0_config;
extern adc16_channel_config_t ADC_channelsConfig[1];
extern const adc16_config_t ADC_config;
extern const adc16_channel_mux_mode_t ADC_muxMode;
extern const tpm_config_t TPM1_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
